{"version":3,"sources":["images/covid.jpg","components/Card.jsx","components/Cards.jsx","sevice/api.js","components/Countries.jsx","components/Chart.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","header","background","padding","Cardcomponent","cardtitle","value","desc","lastUpdate","classes","Grid","component","Card","style","margin","borderBottom","Box","className","Typography","variant","color","CardContent","start","end","duration","separator","Date","toDateString","useStyles","container","fontSize","alignItems","display","flexDirection","Cards","data","confirmed","deaths","recovered","gutterBottom","spacing","justify","CircularProgress","url","fetchData","country","a","changedUrl","axios","get","fetchCountries","countries","map","name","Countries","handleCountryChange","useState","SetCountries","useEffect","fetchApi","marginBottom","NativeSelect","onChange","e","target","i","width","marginTop","Chart","labels","datasets","label","backgroundColor","options","legend","title","text","App","state","fetchedData","setState","console","log","this","props","lastupdate","toLocaleDateString","src","logo","alt","devloper","Component","withStyles","justifyContent","textAlign","fontStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cda5b37.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/covid.4bf201db.jpg\";","import { Box, CardContent, Grid, Typography, Card, makeStyles } from \"@material-ui/core\";\r\nimport Countup from 'react-countup';\r\n\r\nconst useStyle = makeStyles({\r\n    header: {\r\n        background: '#F5F5F5',\r\n        padding: 10\r\n    }\r\n})\r\n\r\nconst Cardcomponent = ({ cardtitle, value, desc, lastUpdate }) => {\r\n    const classes = useStyle();\r\n    return (\r\n        <Grid component={Card} style={{ margin: 20, borderBottom: '10px solid red' }}>\r\n            <Box className={classes.header}>\r\n                <Typography variant='h5' color=\"textSecondary\">{cardtitle}</Typography>\r\n            </Box>\r\n            <CardContent>\r\n                <Typography variant='h5'>\r\n                    <Countup start={0} end={value} duration={2} separator=',' />\r\n\r\n                </Typography>\r\n                <Typography>{desc}</Typography>\r\n                <Typography>{new Date(lastUpdate).toDateString()}</Typography>\r\n            </CardContent>\r\n\r\n        </Grid>\r\n\r\n    )\r\n}\r\nexport default Cardcomponent;","\r\nimport { makeStyles, Box, Typography, CircularProgress, Grid, } from \"@material-ui/core\";\r\nimport Card from './Card';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n\r\n        fontSize: '3vw',\r\n        color: \"Red\",\r\n        alignItems: 'center',\r\n\r\n        display: 'flex',\r\n    },\r\n    component: {\r\n        margin: '50px 0',// top and bottom\r\n        flexDirection: 'column',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n})\r\nconst Cards = ({ data: { confirmed, deaths, recovered, lastUpdate } }) => {\r\n    const classes = useStyles();\r\n    if (!confirmed) {\r\n        return <CircularProgress color=\"secondary\" />\r\n    }\r\n    return (\r\n        <Box className={classes.component}>\r\n\r\n            <Typography className={classes.container} variant=\"h4\" gutterBottom>World Wide (CðŸ˜ˆVID-19) Cases Dashboard</Typography>\r\n            <Grid container spacing={3} justify=\"center\" >\r\n\r\n                <Card\r\n\r\n                    cardtitle=\"Infected\"\r\n                    value={confirmed.value}\r\n                    desc=\"Number of Infected Cases of Covid-19\"\r\n                    lastUpdate={lastUpdate}\r\n                />\r\n\r\n                <Card\r\n                    cardtitle=\"Recoverd\"\r\n                    value={recovered.value}\r\n                    desc=\"Number of Recoverd from Covid-19\"\r\n                    lastUpdate={lastUpdate}\r\n                />\r\n                <Card\r\n                    cardtitle=\"Deaths\"\r\n                    value={deaths.value}\r\n                    desc=\"Number of Deaths Caused by Covid-19\"\r\n                    lastUpdate={lastUpdate}\r\n                />\r\n            </Grid>\r\n        </Box>\r\n\r\n    )\r\n}\r\nexport default Cards;","import axios from 'axios';\r\n\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\n\r\nexport const fetchData = async (country) => {\r\n    let changedUrl = url;\r\n    if (country) {\r\n        changedUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const { data: { confirmed, deaths, recovered, lastUpdate } } = await axios.get(changedUrl);\r\n        return { confirmed, deaths, recovered, lastUpdate };\r\n    } catch (error) {\r\n        return error;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n        return countries.map(country => country.name);\r\n    } catch (error) {\r\n        return error;\r\n\r\n    }\r\n\r\n}\r\n","import { Typography, NativeSelect } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchCountries } from \"../sevice/api\";\r\n\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n\r\n    const [countries, SetCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n\r\n            SetCountries(await fetchCountries());\r\n        }\r\n        fetchApi();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Typography style={{ marginBottom: 20, fontSize: '3vw' }} variant=\"h4\" color=\"textSecondary\">\r\n                Reported Cases or Deaths by countries or Territoty\r\n        </Typography>\r\n            <NativeSelect onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\" > Worldwide</option>\r\n                {countries.map((country, i) => {\r\n                    return (\r\n                        <option key={i} value={country}>{country}</option>\r\n                    )\r\n                })}\r\n            </NativeSelect>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Countries;\r\n","\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\nconst useStyle = makeStyles({\r\n    container: {\r\n        width: '75%',\r\n        marginTop: 20\r\n\r\n\r\n\r\n    }\r\n})\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths } }) => {\r\n    const classes = useStyle();\r\n    return (\r\n        <Box className={classes.container}>\r\n\r\n            {confirmed ? (\r\n                <Bar\r\n                    data={{\r\n                        labels: ['Infected', 'Recovered', 'Deaths'],\r\n                        datasets: [{\r\n                            label: 'Peoples',\r\n                            data: [confirmed.value, recovered.value, deaths.value],\r\n                            backgroundColor: [\r\n                                'rgba(255,0,0, 0.6)',\r\n                                'rgba(0, 180, 0, 0.6)',\r\n                                'rgba(118, 118, 118, 1)',\r\n\r\n                            ],\r\n\r\n\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        legend: { display: false },\r\n                        title: { display: true, text: 'Current state in country' }\r\n                    }}\r\n\r\n\r\n                />) : ''\r\n            }\r\n        </Box>\r\n    )\r\n\r\n}\r\nexport default Chart;","import { Component } from \"react\";\nimport { Box, Typography, withStyles } from '@material-ui/core';\nimport logo from './images/covid.jpg';\nimport Cards from './components/Cards';\nimport { fetchData } from \"./sevice/api\";\nimport Countries from \"./components/Countries\";\nimport Chart from './components/Chart';\nconst style = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column'\n\n  },\n  header: {\n    background: '#F5F5F5',\n    width: 400,\n    textAlign: 'center',\n    fontSize: 20,\n    padding: 10,\n    color: '#777'\n  },\n  lastupdate: {\n    color: '#777',\n    fontSize: 18\n  },\n  devloper: {\n    color: '#888',\n    fontSize: 18,\n    fontStyle: 'oblique'\n  }\n}\n\nclass App extends Component {\n  state = {\n    data: {},\n    country: ''\n  }\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData })\n    console.log(fetchedData);\n  }\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country: country })\n    console.log(fetchedData);\n  }\n\n  render() {\n    const { data } = this.state;\n    return (\n      <Box className={this.props.classes.container}>\n\n        <Box className={this.props.classes.header}>COVID-19 CORONAVIRUS UPDATES</Box>\n        <Typography className={this.props.classes.lastupdate}>Last Updated: {data.lastUpdate && new Date(data.lastUpdate).toLocaleDateString()}</Typography>\n\n        <img style={{ width: 350 }} src={logo} alt=\"covid19\" />\n        <Typography className={this.props.classes.devloper}>Developed by Akash Soni</Typography>\n        <Cards data={data} />\n\n        <Countries handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} />\n      </Box>\n\n    )\n  }\n}\n\nexport default withStyles(style)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}